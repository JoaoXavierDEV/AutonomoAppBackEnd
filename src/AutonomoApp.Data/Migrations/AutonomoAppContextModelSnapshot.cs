// <auto-generated />
using System;
using AutonomoApp.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutonomoApp.Data.Migrations
{
    [DbContext(typeof(AutonomoAppContext))]
    partial class AutonomoAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CS_AS")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutonomoApp.Business.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CatEnumId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Nome");

                    b.Property<Guid?>("SubcategoriasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AACategorias", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AAEnderecos", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoDocumentoEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("AAPessoa", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("SubcategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("AAServicos", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoCategoria", b =>
                {
                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ServicoId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("AAServicoCategoria", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoSolicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataConclusaoEstimada")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicoSolicitadoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("ServicoSolicitadoId");

                    b.ToTable("AAHistoricoDePedidos", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoSubCategoria", b =>
                {
                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubCategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ServicoId", "SubCategoriaId");

                    b.HasIndex("SubCategoriaId");

                    b.ToTable("AAServicoSubCategoria", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Subcategoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SubCatEnumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("AASubCategorias", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.PessoaFisica", b =>
                {
                    b.HasBaseType("AutonomoApp.Business.Models.Pessoa");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.ToTable("AAPessoaFisica", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.PessoaJuridica", b =>
                {
                    b.HasBaseType("AutonomoApp.Business.Models.Pessoa");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.ToTable("AAPessoaJuridica", (string)null);
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Pessoa", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Servico", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Pessoa", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoCategoria", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Categoria", "Categoria")
                        .WithMany("ServicosCategoria")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutonomoApp.Business.Models.Servico", "Servico")
                        .WithMany("ServicoCategoria")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoSolicitacao", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Pessoa", null)
                        .WithMany("HistoricoDePedidos")
                        .HasForeignKey("PessoaId");

                    b.HasOne("AutonomoApp.Business.Models.Servico", "ServicoSolicitado")
                        .WithMany()
                        .HasForeignKey("ServicoSolicitadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicoSolicitado");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.ServicoSubCategoria", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Servico", "Servico")
                        .WithMany("ServicoSubCategoria")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutonomoApp.Business.Models.Subcategoria", "Subcategoria")
                        .WithMany("ServicoSubCategoria")
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Subcategoria", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Categoria", null)
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.PessoaFisica", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AutonomoApp.Business.Models.PessoaFisica", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.PessoaJuridica", b =>
                {
                    b.HasOne("AutonomoApp.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AutonomoApp.Business.Models.PessoaJuridica", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Categoria", b =>
                {
                    b.Navigation("ServicosCategoria");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Pessoa", b =>
                {
                    b.Navigation("HistoricoDePedidos");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Servico", b =>
                {
                    b.Navigation("ServicoCategoria");

                    b.Navigation("ServicoSubCategoria");
                });

            modelBuilder.Entity("AutonomoApp.Business.Models.Subcategoria", b =>
                {
                    b.Navigation("ServicoSubCategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
